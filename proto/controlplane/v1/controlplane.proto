// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";
package controlplane.proto.v1;

import "controller/v1/controller.proto";

option go_package = "github.com/agntcy/slim/control-plane/common/proto/controlplane/v1;controlplanev1";

service ControlPlaneService {
  rpc AddRoute(AddRouteRequest) returns (AddRouteResponse) {}
  rpc DeleteRoute(DeleteRouteRequest) returns (DeleteRouteResponse) {}
  rpc ListRoutes(Node) returns (controller.proto.v1.SubscriptionListResponse) {}
  rpc ListConnections(Node) returns (controller.proto.v1.ConnectionListResponse) {}
  rpc ListNodes(NodeListRequest) returns (NodeListResponse) {}

  // MLS group management
  rpc CreateChannel(controller.proto.v1.CreateChannelRequest) returns (controller.proto.v1.CreateChannelResponse) {}
  rpc DeleteChannel(controller.proto.v1.DeleteChannelRequest) returns (controller.proto.v1.Ack) {}
  rpc AddParticipant(controller.proto.v1.AddParticipantRequest) returns (controller.proto.v1.Ack) {}
  rpc DeleteParticipant(controller.proto.v1.DeleteParticipantRequest) returns (controller.proto.v1.Ack) {}
  rpc ListChannels(controller.proto.v1.ListChannelsRequest) returns (controller.proto.v1.ListChannelsResponse) {}
  rpc ListParticipants(controller.proto.v1.ListParticipantsRequest) returns (controller.proto.v1.ListParticipantsResponse) {}
}

message ConfigurationCommand {
  controller.proto.v1.ConfigurationCommand configuration_command = 1;
  string nodeId = 2;
}

message Node {
  string id = 1;
}

message NodeListRequest {}

enum NodeStatus {
  NODE_STATUS_UNSPECIFIED = 0;
  CONNECTED = 1;
  NOT_CONNECTED = 2;
}

message NodeEntry {
  string id = 1;
  repeated controller.proto.v1.ConnectionDetails connections = 2;
  NodeStatus status = 4;
}

message NodeListResponse {
  repeated NodeEntry entries = 1;
}

message AddRouteRequest {
  controller.proto.v1.Connection connection = 1;
  controller.proto.v1.Subscription subscription = 2;
  string nodeId = 3;
  string destNodeId = 4; // optional
}

message AddRouteResponse {
  bool success = 1;
  string routeId = 2;
}

message DeleteRouteRequest {
  controller.proto.v1.Subscription subscription = 1;
  string nodeId = 2;
  string destNodeId = 3; // optional
}

message DeleteRouteResponse {
  bool success = 1;
}
