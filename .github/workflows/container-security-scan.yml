# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

name: Container Security Scan

on:
  # Nightly scan on main branch only; manual dispatch allowed.
  schedule:
    - cron: '0 3 * * *' # Daily at 03:00 UTC (runs on default branch context: main)
  workflow_dispatch:

permissions:
  contents: read
  security-events: write # for uploading SARIF
  actions: read
  issues: write # create issues for critical CVEs

jobs:
  trivy-scan:
    name: Trivy Image Scan (Pull from GHCR)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: slim-node
            repo: ghcr.io/${{ github.repository_owner }}/slim
            version: 0.6.1
          - image: slim-controller
            repo: ghcr.io/${{ github.repository_owner }}/slim/control-plane
            version: 0.6.0
          - image: spire-server
            repo: ghcr.io/spiffe/spire-server
            version: 1.13.3
          - image: spire-agent
            repo: ghcr.io/spiffe/spire-agent
            version: 1.13.3
          - image: spire-helper
            repo: ghcr.io/spiffe/spiffe-helper
            version: 0.10.1

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image (explicit version)
        run: |
          set -euo pipefail
          IMAGE_REF="${{ matrix.repo }}:${{ matrix.version }}"
          echo "Pulling $IMAGE_REF"
          docker pull "$IMAGE_REF"
          docker image inspect "$IMAGE_REF" >/dev/null 2>&1

      - name: Run Trivy vulnerability scan (image)
        uses: aquasecurity/trivy-action@9ab158e8597f3b310480b9a69402b419bc03dbd5 # v0.24.0
        with:
          image-ref: ${{ matrix.repo }}:${{ matrix.version }}
          format: sarif
          output: trivy-${{ matrix.image }}.sarif
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM'
          ignore-unfixed: true

      - name: Run Trivy vulnerability scan (JSON output)
        uses: aquasecurity/trivy-action@9ab158e8597f3b310480b9a69402b419bc03dbd5 # v0.24.0
        with:
          image-ref: ${{ matrix.repo }}:${{ matrix.version }}
          format: json
          output: trivy-${{ matrix.image }}.json
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM'
          ignore-unfixed: true

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@1b1aada464948af03b950897e5eb522f92603cc2 # v3.26.9
        with:
          sarif_file: trivy-${{ matrix.image }}.sarif
          # Distinguish reports per container image in Code Scanning UI
          category: trivy-${{ matrix.image }}

      - name: Generate Trivy summary
        run: |
          chmod +x .github/workflows/scripts/security/generate_trivy_summary.sh
          .github/workflows/scripts/security/generate_trivy_summary.sh trivy-${{ matrix.image }}.json trivy-${{ matrix.image }}-summary.md

      - name: Upload raw report artifacts
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: trivy-report-${{ matrix.image }}
          path: |
            trivy-${{ matrix.image }}.sarif
            trivy-${{ matrix.image }}.json
            trivy-${{ matrix.image }}-summary.md
          retention-days: 7

  summarize:
    name: Summarize Results
    needs: [trivy-scan]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Download artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: trivy-artifacts

      - name: Debug artifact contents
        run: |
          echo "Downloaded artifact directory tree:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          find trivy-artifacts -maxdepth 3 -type f -print >> $GITHUB_STEP_SUMMARY || true
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

      - name: Generate consolidated summary
        run: |
          chmod +x .github/workflows/scripts/security/generate_trivy_summary.sh
          .github/workflows/scripts/security/generate_trivy_summary.sh

      - name: Fail if critical vulns found (optional gate)
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          set -e
          found=$(grep -R "CRITICAL" -c trivy-artifacts || true)
          if [ "${found}" != "0" ]; then
            echo "Critical vulnerabilities detected. (Gate currently informational.)" >&2
          fi

      - name: Setup Node.js for issue creation
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: '20'

      - name: Install dependencies
        if: ${{ github.event_name != 'pull_request' }}
        run: npm install @octokit/rest

      - name: Create GitHub issues for critical CVEs
        if: ${{ github.event_name != 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          set -euo pipefail
          node .github/workflows/scripts/security/create_critical_cve_issues.js