#!/bin/bash

# Generate Trivy summary for container security scanning
# Usage: ./generate_trivy_summary.sh <trivy-json-file>

set -euo pipefail

TRIVY_FILE="${1:-trivy-results.json}"
SUMMARY_FILE="${2:-trivy-summary.md}"

if [[ ! -f "$TRIVY_FILE" ]]; then
    echo "❌ Trivy results file not found: $TRIVY_FILE"
    exit 1
fi

# Parse JSON and generate summary
echo "# 🛡️ Container Security Scan Summary" > "$SUMMARY_FILE"
echo "" >> "$SUMMARY_FILE"

# Get scan metadata
IMAGE=$(jq -r '.ArtifactName // "Unknown"' "$TRIVY_FILE")
SCAN_TIME=$(jq -r '.CreatedAt // "Unknown"' "$TRIVY_FILE")

echo "**Image:** \`$IMAGE\`" >> "$SUMMARY_FILE"
echo "**Scan Time:** $SCAN_TIME" >> "$SUMMARY_FILE"
echo "" >> "$SUMMARY_FILE"

# Count vulnerabilities by severity
CRITICAL=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity == "CRITICAL")] | length' "$TRIVY_FILE")
HIGH=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity == "HIGH")] | length' "$TRIVY_FILE")
MEDIUM=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity == "MEDIUM")] | length' "$TRIVY_FILE")
LOW=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity == "LOW")] | length' "$TRIVY_FILE")
UNKNOWN=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity == "UNKNOWN")] | length' "$TRIVY_FILE")

echo "## 📊 Vulnerability Summary" >> "$SUMMARY_FILE"
echo "" >> "$SUMMARY_FILE"
echo "| Severity | Count |" >> "$SUMMARY_FILE"
echo "|----------|-------|" >> "$SUMMARY_FILE"
echo "| 🔴 Critical | $CRITICAL |" >> "$SUMMARY_FILE"
echo "| 🟠 High | $HIGH |" >> "$SUMMARY_FILE"
echo "| 🟡 Medium | $MEDIUM |" >> "$SUMMARY_FILE"
echo "| 🔵 Low | $LOW |" >> "$SUMMARY_FILE"
echo "| ⚪ Unknown | $UNKNOWN |" >> "$SUMMARY_FILE"
echo "" >> "$SUMMARY_FILE"

# Generate detailed findings for critical vulnerabilities
if [[ $CRITICAL -gt 0 ]]; then
    echo "## 🚨 Critical Vulnerabilities" >> "$SUMMARY_FILE"
    echo "" >> "$SUMMARY_FILE"

    jq -r '.Results[]?.Vulnerabilities[]? | select(.Severity == "CRITICAL") |
        "### " + .VulnerabilityID + " - " + (.PkgName // "Unknown Package") +
        "\n**Installed Version:** " + (.InstalledVersion // "Unknown") +
        "\n**Fixed Version:** " + (.FixedVersion // "Not Available") +
        "\n**Description:** " + (.Description // "No description available") + "\n"' "$TRIVY_FILE" >> "$SUMMARY_FILE"
fi

# Add overall assessment
TOTAL=$((CRITICAL + HIGH + MEDIUM + LOW + UNKNOWN))

echo "## 🎯 Assessment" >> "$SUMMARY_FILE"
echo "" >> "$SUMMARY_FILE"

if [[ $CRITICAL -gt 0 ]]; then
    echo "❌ **FAIL**: $CRITICAL critical vulnerabilities found. Immediate action required!" >> "$SUMMARY_FILE"
elif [[ $HIGH -gt 0 ]]; then
    echo "⚠️ **WARNING**: $HIGH high-severity vulnerabilities found. Review recommended." >> "$SUMMARY_FILE"
elif [[ $TOTAL -gt 0 ]]; then
    echo "✅ **PASS**: No critical or high-severity vulnerabilities found." >> "$SUMMARY_FILE"
else
    echo "🎉 **EXCELLENT**: No vulnerabilities detected!" >> "$SUMMARY_FILE"
fi

echo "" >> "$SUMMARY_FILE"
echo "---" >> "$SUMMARY_FILE"
echo "*Generated by Trivy container security scanner*" >> "$SUMMARY_FILE"

echo "✅ Summary generated: $SUMMARY_FILE"
