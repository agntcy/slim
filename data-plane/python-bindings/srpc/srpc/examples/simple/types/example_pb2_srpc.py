# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import srpc
import srpc.grpc.example_pb2 as example__pb2


class TestStub:
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A srpc.Channel.
        """
        self.ExampleUnaryUnary = channel.unary_unary(
            "/example_service.Test/ExampleUnaryUnary",
            request_serializer=example__pb2.ExampleRequest.SerializeToString,
            response_deserializer=example__pb2.ExampleResponse.FromString,
        )
        self.ExampleUnaryStream = channel.unary_stream(
            "/example_service.Test/ExampleUnaryStream",
            request_serializer=example__pb2.ExampleRequest.SerializeToString,
            response_deserializer=example__pb2.ExampleResponse.FromString,
        )
        self.ExampleStreamUnary = channel.stream_unary(
            "/example_service.Test/ExampleStreamUnary",
            request_serializer=example__pb2.ExampleRequest.SerializeToString,
            response_deserializer=example__pb2.ExampleResponse.FromString,
        )
        self.ExampleStreamStream = channel.stream_stream(
            "/example_service.Test/ExampleStreamStream",
            request_serializer=example__pb2.ExampleRequest.SerializeToString,
            response_deserializer=example__pb2.ExampleResponse.FromString,
        )


class TestServicer:
    """Missing associated documentation comment in .proto file."""

    def ExampleUnaryUnary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(srpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ExampleUnaryStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(srpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ExampleStreamUnary(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(srpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ExampleStreamStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(srpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_TestServicer_to_server(servicer, server: srpc.Server):
    rpc_method_handlers = {
        "ExampleUnaryUnary": srpc.unary_unary_rpc_method_handler(
            handler=servicer.ExampleUnaryUnary,
            request_deserializer=example__pb2.ExampleRequest.FromString,
            response_serializer=example__pb2.ExampleResponse.SerializeToString,
        ),
        "ExampleUnaryStream": srpc.unary_stream_rpc_method_handler(
            handler=servicer.ExampleUnaryStream,
            request_deserializer=example__pb2.ExampleRequest.FromString,
            response_serializer=example__pb2.ExampleResponse.SerializeToString,
        ),
        "ExampleStreamUnary": srpc.stream_unary_rpc_method_handler(
            handler=servicer.ExampleStreamUnary,
            request_deserializer=example__pb2.ExampleRequest.FromString,
            response_serializer=example__pb2.ExampleResponse.SerializeToString,
        ),
        "ExampleStreamStream": srpc.stream_stream_rpc_method_handler(
            handler=servicer.ExampleStreamStream,
            request_deserializer=example__pb2.ExampleRequest.FromString,
            response_serializer=example__pb2.ExampleResponse.SerializeToString,
        ),
    }

    server.register_method_handlers(
        "example_service.Test",
        rpc_method_handlers,
    )
