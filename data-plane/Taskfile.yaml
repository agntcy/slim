# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

---

version: '3'

silent: true
set: [pipefail]
shopt: [globstar]

includes:
  data-plane:
    taskfile: ../tasks/rust.yaml
    vars:
      GLOBAL_ARGS: "--workspace"

vars:
  CARGO_COMPONENTS: "cargo-sort cargo-audit cargo-llvm-cov cargo-machete@0.7.0 cargo-deny@0.17.0 typos-cli"

tasks:
  data-plane:python-bindings:lint:
    desc: "Python linter"
    internal: true
    dir: ./python-bindings
    cmds:
      - task python-bindings:lint

  data-plane:lint:
    desc: "Run the linter"
    cmds:
      - task: data-plane:lintall
      - task: data-plane:python-bindings:lint

  data-plane:build:strip:
    desc: "Build the project and strip the debug symbols"
    cmds:
      - task: data-plane:build
      - task: data-plane:toolchain:strip
        vars:
          TARGET_BIN: "target/{{.TARGET}}/{{.PROFILE}}/slim"

  data-plane:run:server:
    desc: "Run the server"
    cmds:
      - task: data-plane:build
      - task: data-plane:toolchain:run
        vars:
          ARGS: ""
          BIN: "slim"
          BIN_ARGS: "--config ./config/base/server-config.yaml"

  data-plane:run:server-with-otel:
    desc: "Run the server with OpenTelemetry enabled"
    cmds:
      - task: data-plane:build
      - task: data-plane:toolchain:run
        vars:
          ARGS: ""
          BIN: "slim"
          BIN_ARGS: "--config ./config/telemetry/server-config.yaml"

  data-plane:telemetry:start:
    desc: "Start telemetry stack"
    cmds:
      - docker compose -f ./config/telemetry/docker-compose.yml up

  data-plane:bindings:python:
    desc: "Generate the Python bindings"
    dir: ./python-bindings
    cmds:
      - task python-bindings:packaging PROFILE={{.PROFILE}} TARGET={{.TARGET}}
    vars:
      PROFILE: '{{.PROFILE | default "debug"}}'
      TARGET: '{{.TARGET | default ""}}'

  data-plane:bindings:test:
    desc: "Test the Python bindings"
    dir: ./python-bindings
    cmds:
      - task python-bindings:test TESTS={{.TESTS}}
    vars:
      TESTS: '{{.TESTS | default ""}}'

  data-plane:slim:version:
    desc: "Get version from corresponding git tag"
    cmds:
      - git describe --tags --match "slim-v*" | cut -d 'v' -f 2

  data-plane:generate:grpc-json-schema:
    desc: "Generate the gRPC schema"
    cmds:
      - cargo run --bin generate-schema